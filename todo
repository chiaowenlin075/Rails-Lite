1. for nested render, how to deal with it?
ex: we render another template in a template
Two Goals:
# For rendering another template in a template should work too!
# Since the way we build render is first get the content, and inside the content
# we render another form and set 'already_build_response' .... wait...it block us
# from the main render, then how??

# let render to take in optional hash

2. How to make helper_method (methods that can be used in views)
--> Regular functions can also be used in views!! YAY!

# ./test.html.erb
<h1>helper_method test!</h1>
<pre><%= cat_test %></pre>

# ./test.rb
require 'erb'

def cat_test
  "Hey! Regular function can also be used in views template!"
end

def render
  result = ERB.new(File.read("test.html.erb")).result(binding)
end

render # "<h1>helper_method test!</h1>\n<pre>Hey! Regular function can also be used in views template!</pre>\n"
